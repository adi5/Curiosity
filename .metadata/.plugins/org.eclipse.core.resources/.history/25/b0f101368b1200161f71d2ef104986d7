package com.v_1_0_0.controllers;

import java.io.IOException;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.google.gson.Gson;
import com.v_1_0_0.ControllerUtility.ProjectUtility;
import com.v_1_0_0.bean_utility.CreateInfo;
import com.v_1_0_0.bean_utility.UpdateInfo;
import com.v_1_0_0.bean_utility.comments.Comment;
import com.v_1_0_0.models.project_model.model.Project;
import com.v_1_0_0.models.project_model.model.project_info.Info;
import com.v_1_0_0.tool_utility.DateUtility;

/**
 * This is the Project-Module Controller
 * 
 * @author RITESH SINGH
 * @version 1.0.0, 24 March 2016
 */
@Controller
public class ProjectController {

	/**
	 * This Url use to Go-On project-create page
	 * 
	 * @update RITESH SINGH at 24 March 2016
	 * @author RITESH SINGH
	 * @since version 1.0.0, 24 March 2016
	 * 
	 * @return ModelAndView
	 */
	@RequestMapping(value = { "/projectCreate" }, method = RequestMethod.GET)
	public ModelAndView projectCreatePage() {
		
		/*College col = new College();
		Gson g = new Gson();
		col.setId("sadas");
		col.setName("sdfsf");
		System.out.println(g.toJson(col));
		*/
		return new ModelAndView("v_1_0_0/project/create");
	}
	
	/**
	 * This Url use to Saved the requested project in CouchDB
	 * 
	 * @update RITESH SINGH at 24 March 2016
	 * @author RITESH SINGH
	 * @since version 1.0.0, 24 March 2016
	 * 
	 * @return ModelAndView
	 */
	@RequestMapping(value = "/projectSave", method = RequestMethod.POST)
	public ModelAndView showMessage(@ModelAttribute("projectCreate") Project project, BindingResult result, HttpServletRequest request) throws Exception {

		Gson gson = new Gson();
		System.out.println("Data= "+gson.toJson(project));
		/*This line set the key in CouchDB*/
		project.set_id(project.getId());
		project.setTag("hello");
		CreateInfo createInfo = new CreateInfo();
		createInfo.setCreateAt(DateUtility.getCurrentDate());
		createInfo.setTime(DateUtility.getCurrentDateLong());
		createInfo.setCreateBy("IRONMAN-TEST");
		project.setCreateInfo(createInfo);
		
		System.out.println("Docks status= "+project.createProject(project));
		
		return new ModelAndView("v_1_0_0/project/create");
	}
	
	/**
	 * This Url use to Go-On project-List page
	 * 
	 * @update RITESH SINGH at 26 March 2016
	 * @author RITESH SINGH
	 * @since version 1.0.0, 26 March 2016
	 * 
	 * @return ModelAndView
	 */
	@RequestMapping(value = { "/projectList" }, method = RequestMethod.GET)
	public ModelAndView projectListPage() {
		
		return new ModelAndView("v_1_0_0/project/list", "tag","data123");
	}
	
	/**
	 * This Url use to get the project-List using ajax call
	 * 
	 * @update RITESH SINGH at 26 March 2016
	 * @author RITESH SINGH
	 * @since version 1.0.0, 26 March 2016
	 * 
	 * @return ModelAndView
	 */
	@RequestMapping("/projects")
	public @ResponseBody String getList(@RequestParam(value="tag")String tag,HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		String path = request.getContextPath();
		System.out.println(path);
		
		return new Gson().toJson(ProjectUtility.getProjectList(tag));
		//return null;
	}
	
	/**
	 * This Url use to get the project-View 
	 * 
	 * @update RITESH SINGH at 15 April 2016
	 * @author RITESH SINGH
	 * @since version 1.0.0, 15 April 2016
	 * 
	 * @return ModelAndView
	 */
	@RequestMapping("/projectView")
	public ModelAndView getView(@RequestParam(value="projectId")String projectId,HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		Project project = new Project();
		project.setId(projectId);
		
		return new ModelAndView("v_1_0_0/project/view","project",project.getProjectById());
		//return null;
	}
	
	
	
	/**
	 * This Url use to Go-On project-Info page
	 * 
	 * @update RITESH SINGH at 29 March 2016
	 * @author RITESH SINGH
	 * @since version 1.0.0, 29 March 2016
	 * 
	 * @return ModelAndView
	 * @throws UnknownHostException 
	 */
	@RequestMapping(value = { "/projectInfo" }, method = RequestMethod.GET)
	public ModelAndView projectInfoPage(@RequestParam(value = "projectId") String projectId,HttpServletRequest request, HttpServletResponse response) throws UnknownHostException {
		
		System.out.println("ProjectID= "+projectId);
		Map<String,Object> map = new HashMap<String,Object>();
		Project project = new Project(projectId.trim());
		project = project.getProjectById();
		map.put("projectId", project.getId());
		try{
			
			
			for(Comment c : project.getProjectInfo().getComments()){
				c.setComments(c.getComments().replaceAll("\n", "<br/>"));
				c.setComments(c.getComments().replaceAll(" ", "&nbsp;"));
			}
			
			/*Sorting the Comments*/
			// Sorting
			Collections.sort(project.getProjectInfo().getComments(), new Comparator<Comment>() {
			        @Override
			        public int compare(Comment comment2, Comment comment1)
			        {

			            return  comment1.getCreateInfo().getCreateAt().compareTo(comment2.getCreateInfo().getCreateAt());
			        }
			    });
			
			map.put("comments", project.getProjectInfo().getComments());
		}catch(Exception ee){
			map.put("comments", "");	
		}
		return new ModelAndView("v_1_0_0/project/info","data",map);
	}
	
	/**
	 * This Url use to Saved the requested info in CouchDB
	 * 
	 * @update RITESH SINGH at 19 April 2016
	 * @author RITESH SINGH
	 * @since version 1.0.0, 19 April 2016
	 * 
	 * @return ModelAndView
	 */
	@RequestMapping(value = "/projectInfoSave", method = RequestMethod.POST)
	public ModelAndView saveProjectInfo(@ModelAttribute("projectInfo") Comment comment, BindingResult result, HttpServletRequest request) throws Exception {

		Gson gson = new Gson();
		
		comment.setCommentId("comment"+comment.getRefId().trim()+DateUtility.getCurrentDateLong()+"done");
		CreateInfo createInfo = new CreateInfo();
		createInfo.setCreateAt(DateUtility.getCurrentDate());
		createInfo.setTime(DateUtility.getCurrentDateLong());
		createInfo.setCreateBy("IRONMAN-TEST");
		comment.setCreateInfo(createInfo);
		
		Project project = new Project(comment.getRefId().trim());
		project = project.getProjectById();
		Info projectInfo;
		ArrayList<Comment> comments;
		try{
			projectInfo = project.getProjectInfo();
			if(projectInfo != null)
				try{
					comments = projectInfo.getComments();
				}catch(Exception ee){
					comments = new ArrayList<Comment>();
				}
			else{
				projectInfo = new Info();
				comments = new ArrayList<Comment>();
			}
		}catch(Exception ee){
			projectInfo = new Info();
			comments = new ArrayList<Comment>();
		}
		comments.add(comment);
	    projectInfo.setComments(comments);
	    project.setProjectInfo(projectInfo);
	    
		System.out.println(gson.toJson(project));
		
		project.updateProject();
		
		String path = request.getContextPath();
		return new ModelAndView("redirect:/.."+path+"/projectInfo?projectId="+comment.getRefId().trim());
		//return new ModelAndView("v_1_0_0/project/create");
	}
	
	/**
	 * This Url use to Go-On project-Info page
	 * 
	 * @update RITESH SINGH at 29 March 2016
	 * @author RITESH SINGH
	 * @since version 1.0.0, 29 March 2016
	 * 
	 * @return ModelAndView
	 * @throws UnknownHostException 
	 */
	@RequestMapping(value = { "/projectInfoComment" }, method = RequestMethod.GET)
	public ModelAndView projectInfoUpdateComment(@RequestParam(value = "commentId") String commentId, @RequestParam(value = "projectId") String projectId,HttpServletRequest request, HttpServletResponse response) throws UnknownHostException {
		
		System.out.println("ProjectID= "+projectId);
		Map<String,Object> map = new HashMap<String,Object>();
		Project project = new Project(projectId.trim());
		project = project.getProjectById();
		map.put("projectId", project.getId());
		try{
			for(Comment c : project.getProjectInfo().getComments()){
				if(c.getCommentId().trim().equals(commentId.trim())){
					map.put("commentId", c.getCommentId());
					map.put("comments", c.getComments());
					break;
				}
			}
			
		}catch(Exception ee){
			ee.printStackTrace();
		}

		return new ModelAndView("v_1_0_0/project/commentUpdate","data",map);
	}
	
	/**
	 * This Url use to Update the requested info in CouchDB
	 * 
	 * @update RITESH SINGH at 21 April 2016
	 * @author RITESH SINGH
	 * @since version 1.0.0, 21 April 2016
	 * 
	 * @return ModelAndView
	 */
	@RequestMapping(value = "/projectInfoCommentUpdate", method = RequestMethod.POST)
	public ModelAndView updateProjectInfoComment(@ModelAttribute("projectInfo") Comment comment, BindingResult result, HttpServletRequest request) throws Exception {

		Gson gson = new Gson();
		UpdateInfo updateInfo = new UpdateInfo();
		updateInfo.setUpdateAt(DateUtility.getCurrentDate());
		updateInfo.setTime(DateUtility.getCurrentDateLong());
		updateInfo.setUpdateBy("IRONMAN-TEST");
		comment.setUpdateInfo(updateInfo);
		
		Project project = new Project(comment.getRefId().trim());
		project = project.getProjectById();
		Info projectInfo;
		ArrayList<Comment> comments = new ArrayList<Comment>();;
		try{
			projectInfo = project.getProjectInfo();
			if(projectInfo != null)
				try{
					for(Comment c : projectInfo.getComments()){
						if(c.getCommentId().trim().equals(comment.getCommentId().trim())){
							comment.setCreateInfo(c.getCreateInfo());
							System.out.println("==>"+gson.toJson(comment));
							comments.add(comment);
							System.out.println("==>"+gson.toJson(comments));
						}else{
							comments.add(c);
						}
					}
				}catch(Exception ee){
					ee.printStackTrace();
				}
			else{
				projectInfo = new Info();
			}
		}catch(Exception ee){
			ee.printStackTrace();
			projectInfo = new Info();
		}
		
		projectInfo.setComments(comments);
	    project.setProjectInfo(projectInfo);
	    
		System.out.println(gson.toJson(project));
		
		project.updateProject();
		
		String path = request.getContextPath();
		return new ModelAndView("redirect:/.."+path+"/projectInfo?projectId="+comment.getRefId().trim());
		//return new ModelAndView("v_1_0_0/project/create");
	}
	
	
	/**
	 * This Url use to Go-On task-list page
	 * 
	 * @update RITESH SINGH at 23 April 2016
	 * @author RITESH SINGH
	 * @since version 1.0.0, 23 April 2016
	 * 
	 * @return ModelAndView
	 * @throws IOException 
	 */
	@RequestMapping(value = { "/task" }, method = RequestMethod.GET)
	public ModelAndView taskListPage(@RequestParam(value = "projectId") String projectId, HttpServletResponse response, HttpServletRequest request) throws IOException {
		
		String port = String.valueOf(request.getLocalPort());
		String ip = request.getServerName();

		response.sendRedirect("http://"+ip+":"+port+"/Task/taskList?projectId="+projectId);
		return null;
	}
	
	@RequestMapping(value = { "/check" }, method = RequestMethod.GET)
	public ModelAndView checkPage(HttpServletResponse response, HttpServletRequest request) throws IOException {
		
		String port = String.valueOf(request.getLocalPort());
		String ip = request.getServerName();
		  
		return new ModelAndView("v_1_0_0/project/list", "tag","port :"+port+" ip:"+ip);
	}
}